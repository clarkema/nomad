#! /usr/bin/env bash

function git-peek
{
    local newpath=$1
    local branch

    branch=$(git branch --all | sk | sed 's/.* //') || exit

    git worktree add "$newpath" "$branch"
    cd "$newpath" || exit
    git submodule update
}

#=======================================================================
# Utility functions                                                  {{{
#=======================================================================

# shellcheck disable=SC2164
ncd() {
    mkdir -p "$1" && cd "$1"
}

# }}} END utility functions

# A combination of cd / fd / fzf as a single function.  fd is used for its
# ability to ignore files that are usually uninteresting in order to speed up
# the scan.
#
# We can do without warnings about potentially unsafe `cd` commands here
# shellcheck disable=SC2164
td() {
    local args="$*" # combine all args into a single query string
    local selected

    selected=$(fd | fzf -q "$args")

    if [ -z "$selected" ]; then
        # User cancelled the selection
        return 1
    elif [ -d "$selected" ]; then
        # If selection is a directory, cd to it
        cd "$selected"
    else
        # If selection is a file, cd to its parent directory
        cd "$(dirname "$selected")"
    fi
}

# Just like 'td' above, but always start the scan from $HOME
#
# shellcheck disable=SC2164
tdh() {
    local old_pwd="$PWD"
    local args="$*" # combine all args into a single query string
    local selected

    # Change to home directory temporarily
    cd "$HOME"

    selected=$(fd | fzf -q "$args")

    if [ -z "$selected" ]; then
        # User cancelled the selection, go back to original directory
        cd "$old_pwd"
        return 1
    elif [ -d "$selected" ]; then
        # If selection is a directory, cd to it
        cd "$selected"
    else
        # If selection is a file, cd to its parent directory
        cd "$(dirname "$selected")"
    fi
}

#=======================================================================
# tmux functions                                                     {{{
#=======================================================================

tmx() {
   tmux resize-pane -x "${1-80}"
}

tmxh() {
    local cols
    cols=$(tmux list-windows -F "#{window_width}" | head -n 1)

    tmux resize-pane -x $(( cols / 2 ))
}

tmy() {
    tmux resize-pane -y "${1-25}"
}

tmyh() {
    local rows
    rows=$(tmux list-windows -F "#{window_height}" | head -n 1)

    tmux resize-pane -y $(( rows / 2 ))
}

# }}} END tmux functions

# vim: foldmethod=marker
