#! /usr/bin/env bash

die() {
    printf "%b\n" "$@" >&2
    exit 1
}

if command -v sk > /dev/null; then
    search=sk
elif command -v fzf > /dev/null; then
    search=fzf
else
    die "No search command found; please install one of 'skim' or 'fzf'"
fi

declare -A stations

stations=(
    ["BBC Radio 1"]='http://as-hls-ww-live.akamaized.net/pool_904/live/ww/bbc_radio_one/bbc_radio_one.isml/bbc_radio_one-audio%3d96000.norewind.m3u8'
    ["BBC Radio 2"]='http://as-hls-ww-live.akamaized.net/pool_904/live/ww/bbc_radio_two/bbc_radio_two.isml/bbc_radio_two-audio%3d96000.norewind.m3u8'
    ["BBC Radio 3"]='http://as-hls-ww-live.akamaized.net/pool_904/live/ww/bbc_radio_three/bbc_radio_three.isml/bbc_radio_three-audio%3d96000.norewind.m3u8'
    ["BBC Radio 4 FM"]='http://as-hls-ww-live.akamaized.net/pool_904/live/ww/bbc_radio_fourfm/bbc_radio_fourfm.isml/bbc_radio_fourfm-audio%3d96000.norewind.m3u8'
    ["BBC Radio 4 LW"]='http://as-hls-ww-live.akamaized.net/pool_904/live/ww/bbc_radio_fourlw/bbc_radio_fourlw.isml/bbc_radio_fourlw-audio%3d96000.norewind.m3u8'
    ["BBC World Service News"]='http://a.files.bbci.co.uk/media/live/manifesto/audio/simulcast/hls/nonuk/sbr_low/ak/bbc_world_service.m3u8'
)

play() {
    local -r url=$1

    case $(uname) in
        Darwin)
            if [ -e /Applications/VLC.app/Contents/MacOS/VLC ]; then
                /Applications/VLC.app/Contents/MacOS/VLC "$url" 2>/dev/null &
            elif [ -e /Applications/mpv.app/Contents/MacOS/mpv ]; then
                /Applications/mpv.app/Contents/MacOS/mpv "$url"
            else
                open "$url"
            fi
            ;;
        *)
            if command -v mpv > /dev/null; then
                mpv "$url"
            elif command -v cvlc > /dev/null; then
                cvlc "$url"
            else
                die "No player found; please install one of 'mpv' or 'vlc', or" \
                    "specify with '--player'"
            fi
    esac
}

choose() {
    local -r station=$(for k in "${!stations[@]}"; do echo "$k"; done | sort -r | $search)

    if [ -n "$station" ]; then
        echo "${stations[$station]}"
    else
        exit 1
    fi
}


cmd=$1

case "$cmd" in
    record)
        file=${2:-recording.mp3}
        if [ -e "$file" ]; then
            die "$file exists; refusing to overwrite"
        else
            url=$(choose)
            ffmpeg -y -i "$url" "$file"
        fi
        ;;
    --player)
        url=$(choose)
        $2 "$url"
        ;;
    *)
        play "$(choose)"
esac
